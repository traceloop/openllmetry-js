name: Release - OpenTelemetry v1 Compatible

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.ref }}

      - uses: pnpm/action-setup@v2
        with:
          version: 10
      - uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version-file: ".nvmrc"
      - run: pnpm install --frozen-lockfile
      - name: Build
        run: pnpm nx run-many --target=build --parallel=3
      - name: Git Identity
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://github-actions[bot]:${GITHUB_TOKEN}@github.com/$GITHUB_REPOSITORY
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: Create Version with OTel v1 suffix
        run: |
          # Get the current version and add -otel-v1 suffix
          CURRENT_VERSION=$(node -p 'require("./lerna.json").version')
          NEW_VERSION="${CURRENT_VERSION}-otel-v1"
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          pnpm lerna version $NEW_VERSION --no-private --no-git-tag-version --yes
      - name: Update package versions with otel-v1 tag
        run: |
          # Add otel-v1 dist-tag for npm publishing
          find packages -name package.json -not -path "*/node_modules/*" -exec sed -i.bak 's/"tag": "latest"/"tag": "otel-v1"/g' {} \;
      - name: Commit version changes
        run: |
          git add .
          git commit -m "chore: release v${NEW_VERSION} for OpenTelemetry v1 compatibility"
          git push origin otel-v1-main
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      - name: "NPM Identity"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc
      - name: Build for Release
        run: pnpm nx run-many --target=build --parallel=3
      - name: Publish with otel-v1 tag
        run: |
          # Publish all packages with otel-v1 dist-tag
          pnpm lerna publish from-git --dist-tag otel-v1 --no-private --yes